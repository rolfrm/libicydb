// This file is auto generated by table_compiler
#include "icydb.h"
typedef struct _TABLE_NAME{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const INDEX_TYPE * k1, const INDEX_TYPE * k2);
  const size_t sizes[COLUMN_COUNT];

  VALUE_COLUMNS1;
  MEM_AREAS;
}TABLE_NAME;

TABLE_NAME * TABLE_NAME_create(const char * optional_name);
void TABLE_NAME_set(TABLE_NAME * table, VALUE_COLUMNS2);
void TABLE_NAME_insert(TABLE_NAME * table, VALUE_COLUMNS3, size_t count);
void TABLE_NAME_lookup(TABLE_NAME * table, INDEX_TYPE * keys, size_t * out_indexes, size_t count);
void TABLE_NAME_remove(TABLE_NAME * table, INDEX_TYPE * keys, size_t key_count);
void TABLE_NAME_clear(TABLE_NAME * table);
void TABLE_NAME_unset(TABLE_NAME * table, INDEX_TYPE key);
bool TABLE_NAME_try_get(TABLE_NAME * table, VALUE_COLUMNS3);
void TABLE_NAME_print(TABLE_NAME * table);
size_t TABLE_NAME_iter(TABLE_NAME * table, INDEX_TYPE * keys, size_t keycnt, INDEX_TYPE * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
